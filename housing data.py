# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PJxGFFzhDRMlI0T6_X1U_Q5B41AZZFIY
"""

#import dependies
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import linear_model

#load the bostan hpusing dataset 
df=pd.read_csv("HousingData.csv")
df

df.describe()

df.columns

df.shape

df.dtypes

df.info()

df.dropna(inplace=True)
df

df.info()

from sklearn.model_selection import train_test_split
X=df.drop(['MEDV'],axis=1)
y=df['MEDV']

X

y

corr=df.corr()
corr

X.hist()

df.hist()

plt.figure(figsize=(20,20))
sns.heatmap(df.corr(),annot=True,cmap='gray')

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)

from sklearn.linear_model import LinearRegression
reg=LinearRegression()
reg.fit(X_train,y_train)
LinearRegression()

reg.coef_

y_pred=reg.predict(X_train)
y_pred

y_test.head

from sklearn import metrics
print('R^2:',metrics.r2_score(y_train,y_pred))
print('MAE:',metrics.mean_absolute_error(y_train,y_pred))
print('MSE:',metrics.mean_squared_error(y_train,y_pred))
print('RMSE:',np.sqrt(metrics.mean_squared_error(y_train,y_pred)))

#predicting test data with the model
y_test_pred=reg.predict(X_test)
y_test_pred

print('R^2:',metrics.r2_score(y_test,y_test_pred))
print('MAE:',metrics.mean_absolute_error(y_test,y_test_pred))
print('MSE:',metrics.mean_squared_error(y_test,y_test_pred))
print('RMSE:',np.sqrt(metrics.mean_squared_error(y_test,y_test_pred)))